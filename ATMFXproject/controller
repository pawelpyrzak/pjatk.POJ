package sample;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.image.ImageView;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;
import java.net.URL;
import java.util.ResourceBundle;

public class Controller implements Initializable {


    @FXML
    private Button oneButton;

    @FXML
    private ImageView one;

    @FXML
    private ImageView cardSlotJpg;

    @FXML
    private Button cardSlot;

    @FXML
    private Button twoButton;

    @FXML
    private ImageView two;

    @FXML
    private ImageView five;

    @FXML
    private Button fiveButton;

    @FXML
    private Button threeButton;

    @FXML
    private ImageView three;

    @FXML
    private Button fourButton;

    @FXML
    private Button sixButton;

    @FXML
    private Button sevenButton;

    @FXML
    private Button eightButton;

    @FXML
    private Button nineButton;

    @FXML
    private Button zeroButton;

    @FXML
    private Button clearButton;

    @FXML
    private Button cancelButton;

    @FXML
    private Button enterButton;

    @FXML
    private ImageView six;

    @FXML
    private ImageView seven;

    @FXML
    private ImageView eight;

    @FXML
    private ImageView zero;

    @FXML
    private ImageView nine;

    @FXML
    private ImageView cancel;

    @FXML
    private ImageView enter;

    @FXML
    private ImageView clear;

    @FXML
    private ImageView cardImage;

    @FXML
    private Label withdrawLabel;

    @FXML
    private Label debitLabel;

    @FXML
    private Label balanceLabel;

    @FXML
    private Label accountLabel;

    @FXML
    private Label phoneLabel;

    @FXML
    private Label billLabel;

    @FXML
    private PasswordField pin;

    @FXML
    private TextField mainTxt;

    @FXML
    private Button billPaymentButton;

    @FXML
    private ImageView billPayment;

    @FXML
    private Button witdhrawButton;

    @FXML
    private ImageView witdhraw;

    @FXML
    private Button topUpYourPhoneButton;

    @FXML
    private ImageView topUpYourPhone;

    @FXML
    private Button accountStatementButton;

    @FXML
    private ImageView accountStatement;

    @FXML
    private Button balanceButton;

    @FXML
    private ImageView balance;

    @FXML
    private Button depositButton;

    @FXML
    private ImageView deposit;

    @FXML
    private TextField result;

    private Account currentAccount = null;
    private int flag = 1;


    @FXML
    private void handleButtonAction(ActionEvent event) {
        if (event.getSource() == oneButton) {
            pin.setText(pin.getText() + "1");
        } else if (event.getSource() == twoButton) {
            pin.setText(pin.getText() + "2");
        } else if (event.getSource() == threeButton) {
            pin.setText(pin.getText() + "3");
        } else if (event.getSource() == fourButton) {
            pin.setText(pin.getText() + "14");
        } else if (event.getSource() == fiveButton) {
            pin.setText(pin.getText() + "5");
        } else if (event.getSource() == sixButton) {
            pin.setText(pin.getText() + "6");
        } else if (event.getSource() == sevenButton) {
            pin.setText(pin.getText() + "7");
        } else if (event.getSource() == eightButton) {
            pin.setText(pin.getText() + "8");
        } else if (event.getSource() == nineButton) {
            pin.setText(pin.getText() + "9");
        } else if (event.getSource() == zeroButton) {
            pin.setText(pin.getText() + "0");
        } else if (event.getSource() == enterButton) {
            {
                String entered = mainTxt.getText();
                if (entered == null | entered == "") {
                    mainTxt.setText("Entered value is not valid");
                } else if (flag == 0) {
                    mainTxt.setText("Select a valid next transaction");
                } else if (flag == 1) {
                    boolean match = false;
                    int account_no = Integer.parseInt(entered);
                    for (Account account : Atm.accounts) //Account numbers in the text file are compared to the number entered
                    {
                        if (account_no == account.getUserPin()) {
                            currentAccount =account;
                            match = true;
                        }
                    }
                    result.clear();
                    if (match == true) {
                        int i = 3;
                        if (i != 3){

                        }else {
                            i--;
                            mainTxt.setText("Invalid PIN. " + " " + "Your total attempts: " + i);
                        }

                        if (i == 0) {
                            mainTxt.setText("Maximum number of attempts exceeded- your account has been temporarily blocked. Please contact your bank");
                            pin.setVisible(false);
                        }
                    }
                } else if (flag == 2) {
                    double money = Double.parseDouble(entered);
                    currentAccount.deposit(money);
                    mainTxt.setText("Your current balance is: " + currentAccount.getBalance() + "\n" + "Select your next transaction -->");
                    result.clear();
                    flag = 0;


                } else if (flag == 3) {
                    double money = Double.parseDouble(entered);

                    if (currentAccount.getBalance() < money) {
                        mainTxt.setText("Insuffiecient Balance! Your current balance is: " + currentAccount.getBalance() + "\n" + "Select your next transaction -->");
                        result.clear();
                    } else {
                        currentAccount.withdraw(money);
                        mainTxt.setText("Your current balance is: " + currentAccount.getBalance() + "\n" + "Select your next transaction -->");
                        result.clear();
                    }
                    flag = 0;

                } else if (event.getSource() == balanceButton) {
                    if (currentAccount != null) {
                        mainTxt.setText("Your current balance is: " + currentAccount.getBalance() + "\n" + "Select your next transaction -->");
                    } else {
                        mainTxt.setText("Enter a valid account number before checking balance!");
                    }
                } else if (event.getSource() == depositButton) {
                    if (currentAccount != null) {
                        mainTxt.setText("Enter amount to deposit: ");
                        flag = 2;
                    } else {
                        mainTxt.setText("Enter a valid account number before depositing money!");
                    }
                } else if (event.getSource() == witdhrawButton) {
                    if (currentAccount != null) {
                        mainTxt.setText("Enter amount to withdraw: ");
                        flag = 3;
                    } else {
                        mainTxt.setText("Enter a valid account number before withdrawing money!");
                    }

                } else if (event.getSource() == cancelButton) {
                    pin.setVisible(true);
                    mainTxt.setVisible(true);

                    if (currentAccount != null) {
                        flag = 0;
                        mainTxt.clear();

                    } else {
                        mainTxt.clear();
                    }
                } else if (event.getSource() == clearButton) {
                    pin.setText(pin.getText() + "");

                } else if (event.getSource() == cardSlot) {
                    {
                        if (currentAccount == null) {
                            pin.setVisible(true);
                            mainTxt.setText("Please enter your PIN:");
                        }
                    }
                }
            }
        }
    }

    @Override
    public void initialize(URL url, ResourceBundle resourceBundle) {

    }
}

